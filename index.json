
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Бызова Мария - студентка первого курса направления “Прикладная ифнорматика. 09.03.03” ФФМиЕН Российского университета Дружбы Народов. Она создала данный сайт для размещения подробной информации о себе и своих проектах.\n","date":1714348800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1714348800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Бызова Мария - студентка первого курса направления “Прикладная ифнорматика. 09.03.03” ФФМиЕН Российского университета Дружбы Народов. Она создала данный сайт для размещения подробной информации о себе и своих проектах.","tags":null,"title":"Бызова Мария Олеговна","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Hugo Blox Builder’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Hugo Blox Builder's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":null,"content":"Для начала, прежде чем приступать к рассмотрению методов управления в операционных системах, разберем её основеые задачи и функции. Управление памятью в компьютере — это сложный процесс, включающий в себя координа- цию и оптимизацию выделения различных блоков памяти различным програм- мам для повышения общей производительности системы. Эта функция опера- ционной системы является крайне важной, поскольку она управляет основной памятью, позволяя процессам эффективно обмениваться информацией между оперативной памятью и жестким диском. Операционная система отслеживает каждый участок памяти, следя за его статусом — свободен он или уже занят каким-то процессом.\nПамять представляет собой ценный ресурс, который требует внимательного управления со стороны операционной системы, особенно в многозадачной сре- де. ОС управляет всей оперативной памятью, которая не используется ею самой. Обычно операционная система находится в нижних адресах памяти, но она так- же может занимать и другие области. Задачи ОС по управлению памятью вклю- чают отслеживание доступной и используемой памяти, выделение памяти для процессов и ее освобождение после завершения процессов, перемещение про- цессов из оперативной памяти на диск в случае нехватки памяти и возврат их обратно в оперативную память при освобождении места, а также определение области физической памяти для адресации программ.\nДавайте глубже погрузимся в эту тему и рассмотрим основные аспекты управ- ления памятью в компьютерных системах.\n","date":1714348800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1714348800,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://example.com/project/example/","publishdate":"2024-04-29T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"Данный проект позволит вам больше узнать о методах управления памятью в операционных системах.","tags":["Deep Learning"],"title":"Доклад по теме \"Методы управления памятью в операционных системах\"","type":"project"},{"authors":null,"categories":null,"content":"","date":1714348800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1714348800,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"https://example.com/project/external-project/","publishdate":"2024-04-29T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"Канал со скринкастами по выполнению лабораторных работ, индвидуального проекта и прохождению внешнего курса.","tags":["Demo"],"title":"Канал для выполнения курса \"Архитектура компьютеров и операционные системы. Раздел \"Операционные системы\"","type":"project"},{"authors":["Бызова Мария Олеговна"],"categories":["Demo"],"content":"Рабочая неделя Моя рабочая неделя прошла спокойно, однако пришлось потратить много времени на дополнительную работу после занятий, чтобы уложиться в дедлайны по всем предметам. Я планирую успевать по всем дисциплинам и сохранить свою хорошую успеваемость, поэтому мне приходится прикладывать большие усилия. Но сдаваться я не планирую.\nВыходные Все выходные я занималась выполнением лабораторных работ по архитектуре компьютеров.\nСписок дел, которые мне нужно выполнить на следующей неделе. Начать подготовку к контрольной работе по дискретной математике. Начать подготовку к контрольной работе по матанализу. ","date":1714348800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1714348800,"objectID":"0f37a544ce2716192b081086f7f67b23","permalink":"https://example.com/post/post7/","publishdate":"2024-04-29T00:00:00Z","relpermalink":"/post/post7/","section":"post","summary":"Сейчас я расскажу о событиях, произошедших со мной за эту неделю, всем рекомендую к прочтению.","tags":["Academic"],"title":"Статья о событиях, произошедших на этой неделе 22.04-28.04.","type":"post"},{"authors":["Бызова Мария Олеговна"],"categories":["Demo"],"content":"Языки научного программирования играют ключевую роль в современной науке и исследованиях. Они предоставляют ученым мощные инструменты для анализа данных, моделирования и решения сложных задач.\nОдним из наиболее популярных языков научного программирования является Python. Python обладает простым и понятным синтаксисом, что делает его доступным для ученых различных дисциплин. Большое количество библиотек и фреймворков, таких как NumPy, SciPy, Pandas и Matplotlib, делают Python идеальным выбором для работы с данными, визуализации результатов и создания математических моделей.\nДругим популярным языком научного программирования является R. R специализируется на статистическом анализе данных и визуализации результатов. Богатая экосистема пакетов, таких как ggplot2, dplyr и tidyr, делает R мощным инструментом для исследования данных и построения статистических моделей.\nMATLAB также широко используется в научных исследованиях, особенно в области инженерии, физики и математики. MATLAB предоставляет богатый набор инструментов для численного анализа, моделирования систем и решения уравнений.\nКаждый из этих языков имеет свои преимущества и недостатки, и выбор конкретного языка зависит от конкретной задачи и предпочтений исследователя. Однако все они играют важную роль в развитии науки и помогают ученым достичь новых открытий и результатов.\n","date":1714348800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1714348800,"objectID":"eff061ee8a24f8f74005b0514c080a17","permalink":"https://example.com/post/post8/","publishdate":"2024-04-29T00:00:00Z","relpermalink":"/post/post8/","section":"post","summary":"Эта статья позволит вам узнать больше о языках научного программирования.","tags":["Academic"],"title":"Языки научного программирования.","type":"post"},{"authors":["Бызова Мария Олеговна"],"categories":["Demo"],"content":"Рабочая неделя Моя рабочая неделя прошла спокойно, однако пришлось потратить много времени на дополнительную работу после занятий, чтобы уложиться в дедлайны по всем предметам. Я планирую успевать по всем дисциплинам и сохранить свою хорошую успеваемость, поэтому мне приходится прикладывать большие усилия. Но сдаваться я не планирую.\nВыходные Все выходные я занималась подготовкой доклада на тему “Методы управления памятью в операционных системах” и теперь надеюсь получить хорошие баллы за него.\nСписок дел, которые мне нужно выполнить на следующей неделе. Начать готовиться к контрольной работе по матанализу. Завершить выполнение второго этапа индвидуального проекта. Выполнить лабораторную работы №5. Выполнить лабораторную работу №6. Доделать лабораторную работу по компьютерному практикуму. ","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679011200,"objectID":"fe859c6266641600992fd6a0d6f11947","permalink":"https://example.com/post/post1/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/post1/","section":"post","summary":"Сейчас я расскажу о событиях, произошедших со мной за эту неделю, всем рекомендую к прочтению.","tags":["Academic"],"title":"А что было на этой неделе?","type":"post"},{"authors":["Бызова Мария Олеговна"],"categories":["Demo"],"content":"Рабочая неделя Моя рабочая неделя прошла спокойно, однако пришлось потратить много времени на дополнительную работу после занятий, чтобы уложиться в дедлайны по всем предметам. Я планирую успевать по всем дисциплинам и сохранить свою хорошую успеваемость, поэтому мне приходится прикладывать большие усилия. Но сдаваться я не планирую.\nВыходные Все выходные я занималась подготовкой к контрольной работе по дискретной математике и выполнением лабораторных работ по архитектуре компьютеров.\nСписок дел, которые мне нужно выполнить на следующей неделе. Выполнить лабораторную работу №10. Выполнить лабораторную работу по компьютерному практикуму. ","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679011200,"objectID":"d084acea3d1051f530a6486b095c70b4","permalink":"https://example.com/post/post3/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/post3/","section":"post","summary":"Сейчас я расскажу о событиях, произошедших со мной за эту неделю, всем рекомендую к прочтению.","tags":["Academic"],"title":"Статья о событиях, произошедших на этой неделе.","type":"post"},{"authors":["Бызова Мария Олеговна"],"categories":["Demo"],"content":"Рабочая неделя Моя рабочая неделя прошла спокойно, однако пришлось потратить много времени на дополнительную работу после занятий, чтобы уложиться в дедлайны по всем предметам. Я планирую успевать по всем дисциплинам и сохранить свою хорошую успеваемость, поэтому мне приходится прикладывать большие усилия. Но сдаваться я не планирую.\nВыходные Все выходные я занималась выполнением лабораторных работ по архитектуре компьютеров.\nСписок дел, которые мне нужно выполнить на следующей неделе. Выполнить лабораторную работу №12. Выполнить 4 этап индивидуального проекта. Выполнить 0 лабораторную работу по компьютерному практикуму. ","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679011200,"objectID":"918c2ae645793b070e27ace951359a94","permalink":"https://example.com/post/post5/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/post5/","section":"post","summary":"Сейчас я расскажу о событиях, произошедших со мной за эту неделю, всем рекомендую к прочтению.","tags":["Academic"],"title":"Статья о событиях, произошедших на этой неделе.","type":"post"},{"authors":["Бызова Мария Олеговна"],"categories":["Demo"],"content":"О системе контроля версий Что такое «система контроля версий» и почему это важно? Система контроля версий — это система, записывающая изменения в файл или набор файлов в течение времени и позволяющая вернуться позже к определённой версии. Для контроля версий файлов в этой книге в качестве примера будет использоваться исходный код программного обеспечения, хотя на самом деле вы можете использовать контроль версий практически для любых типов файлов.\nЕсли вы графический или web-дизайнер и хотите сохранить каждую версию изображения или макета (скорее всего, захотите), система контроля версий (далее VCS) — как раз то, что нужно. Она позволяет вернуть файлы к состоянию, в котором они были до изменений, вернуть проект к исходному состоянию, увидеть изменения, увидеть, кто последний менял что-то и вызвал проблему, кто поставил задачу и когда и многое другое. Использование VCS также значит в целом, что, если вы сломали что-то или потеряли файлы, вы спокойно можете всё исправить. В дополнение ко всему вы получите всё это без каких-либо дополнительных усилий.\nЛокальные системы контроля версий Многие люди в качестве метода контроля версий применяют копирование файлов в отдельный каталог (возможно даже, каталог с отметкой по времени, если они достаточно сообразительны). Данный подход очень распространён из-за его простоты, однако он невероятно сильно подвержен появлению ошибок. Можно легко забыть в каком каталоге вы находитесь и случайно изменить не тот файл или скопировать не те файлы, которые вы хотели.\nДля того, чтобы решить эту проблему, программисты давным-давно разработали локальные VCS с простой базой данных, которая хранит записи о всех изменениях в файлах, осуществляя тем самым контроль ревизий.\nОдной из популярных VCS была система RCS, которая и сегодня распространяется со многими компьютерами. RCS хранит на диске наборы патчей (различий между файлами) в специальном формате, применяя которые она может воссоздавать состояние каждого файла в заданный момент времени.\nЦентрализованные системы контроля версий Следующая серьёзная проблема, с которой сталкиваются люди, — это необходимость взаимодействовать с другими разработчиками. Для того, чтобы разобраться с ней, были разработаны централизованные системы контроля версий (Centralized Version Control System, далее CVCS). Такие системы, как CVS, Subversion и Perforce, используют единственный сервер, содержащий все версии файлов, и некоторое количество клиентов, которые получают файлы из этого централизованного хранилища. Применение CVCS являлось стандартом на протяжении многих лет.\nТакой подход имеет множество преимуществ, особенно перед локальными VCS. Например, все разработчики проекта в определённой степени знают, чем занимается каждый из них. Администраторы имеют полный контроль над тем, кто и что может делать, и гораздо проще администрировать CVCS, чем оперировать локальными базами данных на каждом клиенте.\nНесмотря на это, данный подход тоже имеет серьёзные минусы. Самый очевидный минус — это единая точка отказа, представленная централизованным сервером. Если этот сервер выйдет из строя на час, то в течение этого времени никто не сможет использовать контроль версий для сохранения изменений, над которыми работает, а также никто не сможет обмениваться этими изменениями с другими разработчиками. Если жёсткий диск, на котором хранится центральная БД, повреждён, а своевременные бэкапы отсутствуют, вы потеряете всё — всю историю проекта, не считая единичных снимков репозитория, которые сохранились на локальных машинах разработчиков. Локальные VCS страдают от той же самой проблемы: когда вся история проекта хранится в одном месте, вы рискуете потерять всё.\nРаспределённые системы контроля версий Здесь в игру вступают распределённые системы контроля версий (Distributed Version Control System, далее DVCS). В DVCS (таких как Git, Mercurial, Bazaar или Darcs) клиенты не просто скачивают снимок всех файлов (состояние файлов на определённый момент времени) — они полностью копируют репозиторий. В этом случае, если один из серверов, через который разработчики обменивались данными, умрёт, любой клиентский репозиторий может быть скопирован на другой сервер для продолжения работы. Каждая копия репозитория является полным бэкапом всех данных.\nБолее того, многие DVCS могут одновременно взаимодействовать с несколькими удалёнными репозиториями, благодаря этому вы можете работать с различными группами людей, применяя различные подходы единовременно в рамках одного проекта. Это позволяет применять сразу несколько подходов в разработке, например, иерархические модели, что совершенно невозможно в централизованных системах.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679011200,"objectID":"0c6f6cbe96ac9b1239a629e09477d6d1","permalink":"https://example.com/post/post2/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/post2/","section":"post","summary":"Этот пост о том, как начать работу с Git. Вначале изучим основы систем контроля версий.","tags":["Academic"],"title":"Управление версиями Git","type":"post"},{"authors":["Бызова Мария Олеговна"],"categories":["Demo"],"content":"Вступление\nMarkdown - это простой язык разметки, который широко используется для форматирования текста в интернете. Он также поддерживает создание библиографических ссылок, что делает его удобным инструментом для исследователей и студентов.\nЧтобы создать библиографическую ссылку в Markdown, необходимо использовать следующий синтаксис:\nMarkdown [Текст ссылки][идентификатор]\nгде:\n“Текст ссылки” - это текст, который будет отображаться как ссылка. “Идентификатор” - это уникальный идентификатор, который связывается с соответствующей цитатой или библиографической записью. Например, чтобы создать ссылку на книгу, можно использовать следующий код:\nMarkdown [Книга][книга1]\nгде книга1 - это идентификатор.\nЧтобы добавить библиографическую информацию, необходимо использовать следующий синтаксис:\nMarkdown @[идентификатор] { “автор”: “Автор книги”, “название”: “Название книги”, “издательство”: “Издательство”, “год”: “Год публикации” }\nгде:\nИдентификатор - это идентификатор, связанный с текстом ссылки. “автор”, “название”, “издательство” и “год” - это библиографическая информация. Например, чтобы добавить библиографическую информацию для книги, упомянутой выше, можно использовать следующий код:\nMarkdown @[книга1] { “автор”: “Джон Доу”, “название”: “Введение в Markdown”, “издательство”: “Издательство АВС”, “год”: 2023 }\nПри использовании Markdown-редактора или конвертера, библиографические ссылки будут автоматически сгенерированы в выбранном стиле цитирования, например, MLA, APA или Chicago.\nПреимущества использования библиографии в Markdown\nИспользование библиографии в Markdown имеет ряд преимуществ:\nУдобство: Библиографические ссылки легко создавать и редактировать в Markdown. Последовательность: Markdown-редакторы и конвертеры автоматически форматируют ссылки в соответствии с выбранным стилем цитирования. Автоматизация: Библиографические ссылки можно легко экспортировать в другие форматы, такие как Word или PDF. Заключение\nMarkdown - это мощный инструмент для создания и управления библиографическими ссылками. Его простой синтаксис и поддержка различных стилей цитирования делают его идеальным выбором для исследователей и студентов, которым необходимо создавать и форматировать библиографии.\n","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"53a087908899411dab3858677c03ade5","permalink":"https://example.com/post/post6/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/post6/","section":"post","summary":"Эта статья позволит вам узнать больше о легковесном языке разметки Markdown и работе с библиографией.","tags":["Academic"],"title":"Работа с библиографией","type":"post"},{"authors":["Бызова Мария Олеговна"],"categories":["Demo"],"content":"Markdown - легковесный язык разметки, созданный с целью обозначения форматирования в простом тексте, с максимальным сохранением его читаемости человеком, и пригодный для машинного преобразования в языки для продвинутых публикаций. Внутритекстовые формулы делаются аналогично формулам LaTeX.\nВ Markdown вставить изображение в документ можно с помощью непосредственного указания адреса изображения.Синтаксис Markdown для встроенной ссылки состоит из части [link text], представляющей текст гиперссылки, и части (file-name.md) – URL-адреса или имени файла, на который дается ссылка.\nMarkdown поддерживает как встраивание фрагментов кода в предложение, так и их размещение между предложениями в виде отдельных огражденных блоков. Огражденные блоки кода — это простой способ выделить синтаксис для фрагментов кода.\nMarkdown — это простой язык разметки, используемый для создания форматированного текста (например, HTML) с помощью текстового редактора. Он позволяет добавлять к тексту базовое форматирование, используя символы, известные и доступные на всех клавиатурах. Размер шрифта, цвет и другие расширенные параметры недоступны в Markdown.\nВы можете встретить Markdown в .md или .markdown файлах.\nТакие файлы содержат базовые элементы, которые можно найти почти в любом README.md:\nзаголовок первого уровня для названия; выделение жирным шрифтом важных частей в описании; ссылка с понятным текстом; Несмотря на то, что Markdown достаточно удобно читать в исходном виде, его часто переводят в HTML.\nСинтаксис.\nПараграф — это одна или несколько подряд идущих строчек текста, отделённых одной или несколькими пустыми строчками. Если строка содержит только пробелы или табы, то она всё равно считается пустой.\nПодряд идущие строчки будут склеены в одну, если не добавить жёсткий перенос. Существует несколько способов, как это можно сделать:\nдобавить два (или больше) пробелов в конце строки \u0026lt;пробел\u0026gt;\u0026lt;пробел\u0026gt;; добавить обратную косую черту в конце строки ; добавить HTML-тег переноса строки . Markdown предлагает два стиля написания заголовков: через решётки и через подчёркивания (====). Можно использовать до шести уровней заголовков, но подчёркивания позволяют создавать только первые два.\nДля того чтобы выделить заголовок, необходимо поставить от 1 до 6 решёток и пробел в самом начале строки. Уровень заголовка зависит только от количества решёток.\n«Подчёркивание» параграфа знаками равно или дефисами делает его заголовком первого или второго уровня соответственно. Уровень заголовка зависит только от типа «чёрточек», их количество значения не имеет.\nМежду текстом и «подчёркиванием» не должно быть пустых строк.\nДля создания маркированных (ненумерованных) списков перед каждым пунктом нужно поставить минус, плюс или звёздочку. Маркер и текст пункта необходимо разделять пробелом.\n","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"122591be03ff19b49a97c0378f58bb18","permalink":"https://example.com/post/post4/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/post4/","section":"post","summary":"Эта статья позволит вам узнать больше о легковесном языке разметки Markdown.","tags":["Academic"],"title":"Язык разметки Markdown","type":"post"},{"authors":["Бызова Мария Олеговна"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example. Add the publication’s full text or supplementary notes here. You can use rich formatting such as including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://example.com/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Hugo Blox Builder Hugo Blox Builder | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Hugo Blox Builder's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Бызова Мария Олеговна","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Add the publication’s full text or supplementary notes here. You can use rich formatting such as including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://example.com/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Бызова Мария Олеговна","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Add the publication’s full text or supplementary notes here. You can use rich formatting such as including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://example.com/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]